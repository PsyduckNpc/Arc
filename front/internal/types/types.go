// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.1

package types

type CDataSrvRela struct {
	RelaId            int64  `json:"relaId,optional"`
	ApiId             int64  `json:"apiId,optional"`
	SqlLogic          string `json:"sqlLogic,optional"`
	SqlCondition      string `json:"sqlCondition,optional"`
	SqlSort           string `json:"sqlSort,optional"`
	FldTypeObhjName   string `json:"fldTypeObhjName,optional"`
	DataModelObhjName string `json:"dataModelObhjName,optional"`
	DataObjId         string `json:"dataObjId,optional"`
	RelaDataObjId     string `json:"relaDataObjId,optional"`
	AttrMapping       string `json:"attrMapping,optional"`
	RelaMapping       string `json:"relaMapping,optional"`
}

type CenterDataApi struct {
	AfterSql      string `json:"afterSql,optional"`      // 后置SQL
	SqlParam      string `json:"sqlParam,optional"`      // 自定义SQL入参
	ApiId         int64  `json:"apiId,optional"`         // 接口标识
	CenterName    string `json:"centerName,optional"`    // 中心名称
	ApiName       string `json:"apiName,optional"`       // 接口名称
	ApiPath       string `json:"apiPath,optional"`       // 接口路径
	OpType        string `json:"opType,optional"`        // 操作类型
	CallSource    string `json:"callSource,optional"`    // 调用来源
	ApiParam      string `json:"apiParam,optional"`      // 接口入参
	BeforeSql     string `json:"beforeSql,optional"`     // 前置SQL
	DecryptFlag   string `json:"decryptFlag,optional"`   // 属性描述：解密标识
	DecryptFld    string `json:"decryptFld,optional"`    // 属性描述：解密字段
	BeforeExtend  string `json:"beforeExtend,optional"`  // 属性描述：before_sql的扩展字段
	BeforeExtend2 string `json:"beforeExtend2,optional"` // 属性描述：before_sql的扩展字段
}

type OptRoleAO struct {
	Roles []Role `json:",optional,omitempty"`
}

type Page struct {
	CurPage  int64 `json:"curPage,optional,omitempty"`  //当前页码
	PageSize int64 `json:"pageSize,optional,omitempty"` //页大小
	AllNum   int64 `json:"allNum,optional,omitempty"`   //总数
}

type QryRoleAO struct {
	Role
}

type QryRoleVO struct {
	List []Role `json:"list,optional,omitempty"`
	Page *Page  `json:"page,optional,omitempty"`
}

type Role struct {
	RoleId  int64  `json:"roleId,optional,omitempty"`
	Code    string `json:"code,optional,omitempty"`
	Name    string `json:"name,optional,omitempty"`
	DelFlag string `json:"delFlag,optional,omitempty"`
	Page    *Page  `json:"page,optional,omitempty"`
}
